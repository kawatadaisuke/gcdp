
WARNING 
 if MAXNODELDM > MAXNODEDM
   then switch the size of ..._sc .._pc and pare_tr

Library note:
 SVRGP on IMSL

term
 proc ... to indicate each process

### update log ###

22/04/2013
MHD stub1D test requires comment out vyij=vzij=0 and dvy=dvz=0

matching with pv34.6.10
- use NSTHLIM and p<peffp for star formation criteria

matching with pv34.6.7

- Hopkins et al. SF criteria + NSTHLIM
- stime.F, ltime.F no check for dtmin in stime.F (in case of -10<SI_flagrad<-1
- calc_dv_du.F  /GAM for peff
- output.F output arot_v_p
- set_value.F and set_valuedm.F update

*** difference from pv34.6.2

18/03/2012
treef.F95 and dmtreef.F95  -> pv34.6.7
 set flago=3 if the impoted node np_tr=1
 adding .and.proc_dmtr(nd).eq.myrank) then and etc.

dmtree.F95 ldmtree.F95
 - no pn_nfp, but set pn_dmtr 0 or SI_ndm1
forcont.F95
  - in pdval*.dat not output nagravg
### FORTRAN 2003 version: ver. f03.0 copy from pv34.6.2 

27/01/2012
starfd.F
        do i=1,NYEL+1
          tdvr(i)=0.0d0
        enddo
->
        do i=0,NYEL
          tdvr(i)=0.0d0
        enddo



tree.F, dmtree.F, ldmtree.F  ... for np is very few or 0

 set level=0 at the beginning.

 set cmx and etc. and also cx,cy,cz,l for 0 after adjust cx,cz for node 1 and etc.

 if np=0 goto 94

   94 nodese_tr=1      
      if(nprocs.gt.1) then
        numtr0=num_tr
        numtrs=0
        nodess=1
 instead of 0

c *** list(0)=1=numtr0 ***
        i=0
        do i=0,level-2

   93   if(num_tr.eq.0) then
          numtrs=0
          nodess=0
          nodese_tr=0
        else if(nodess.gt.nodese_tr) then
          write(6,*) ' Error in buildtree(): nodess > nodese'
          write(6,*) ' nodess,nodese=',nodess,nodese_tr
          write(6,*) ' rank=',myrank,' np,numgtr=',np,num_tr
          stop
        else
          numtrs=nodese_tr-nodess+1
        endif

  when merge
            if(nrnd.gt.0) then
              noders=tivr(nrnd*3)
              nodere=tivr(nrnd*4-1)
            else
              noders=num_tr
              nodere=num_tr
            endif
 
          if(numtr0.ne.0) then
            next_tr(0)=numtr0
          endif

gtree.F ... in the case if the gas particle is very few or 0
  bug when ng>0, but not particles flagfd<=0
  also, if level=1, nodess_gtr set 0 and noders becomes 0,
    and 
              if(next_gtr(i).ge.noders.and.next_gtr(i).le.nodere) then
    was always sutisfied, and no connection to the next improted tree.

 set level=0 at the beginning.

 if numgtr=0 goto 94, and

          numtrs=0
          nodess_gtr=0
          nodese_gtr=0
 after getting numnfp from gas particle flagfd_p<=0
      if(numnfp.eq.0) then
        numgtr=0
        goto 94
      endif

 after adjust gtree
      np_gtr(0)=np_gtr(1)
      pn_gtr(0)=pn_gtr(1)
      l_gtr(0)=l_gtr(1)
      cx_gtr(0)=cx_gtr(1)
      cy_gtr(0)=cy_gtr(1)
      cz_gtr(0)=cz_gtr(1)

c *** nodess_gtr should be starting from 1, if numgtr.eq.0, it will be corrected later
   94 nodess_gtr=1

c *** list(0)=1=numtr0 ***
        i=0
c list(level) is the first node for the last level 
c if level=1, this do loop will be skipped, but nodess_gtr=1

   93   if(numgtr.eq.0) then
          numtrs=0
          nodess_gtr=0
          nodese_gtr=0
        else if(nodess_gtr.gt.nodese_gtr) then
          write(6,*) ' Error in gbuildtree(): nodess > nodese'
          write(6,*) ' nodess,nodese=',nodess_gtr,nodese_gtr
          write(6,*) ' rank=',myrank,' ng,numgtr=',ng,numgtr
          stop
        else
          numtrs=nodese_gtr-nodess_gtr+1
        endif

  when merge the tree from the other node
          if(ip.ne.myrank.and.np_gtr(0).gt.0) then
 ->
          if(ip.ne.myrank.and.ng.gt.0) then
  there is the case np_gtr(0)=0, but not ng=0, because of the new feedback particles.

            if(nrnd.gt.0) then
              noders=tivr(nrnd*3)
              nodere=tivr(nrnd*4-1)
            else
              noders=numgtr
              nodere=numgtr
            endif

add check for if numtr0 (number of the local tree is 0) is 0
c *** check there is any imported nodes if yes, change next_gtr(0) ***
        if(numtr0.ne.numgtr) then
          if(numtr0.ne.0) then
            next_gtr(0)=numtr0
          endif

setslgtr.F
      if(np_gtr(0).le.1.or.proc_gtr(0).ne.myrank) then

calc_dv_du.F, set_value.F, treef.F

   70 if(np_gtr(0).eq.0) then
        goto 99
      endif
      if(iproc.ne.0.and.proc_gtr(0).ne.myrank) then
        goto 99
      endif

  if no local tree, but only imported tree. 
  watch next_gtr(0) ... especially for pseudo_node node case

add
      integer ndp,pnodess
and change to
              if(proc_gtr(0).eq.myrank) then
                pnodess=next_gtr(0)
              else
c in case, if there is no local tree, but pseudo nodes
                pnodess=0
              endif
              do nd=nodess,num_gtr-1
also
              do i=0,ndp-1
                nd=ndpnd(i)                  
                if(next_gtr(nd).gt.next_gtr(0)
     &            .and.next_gtr(nd).le.ndpnd(ndp-1)) then
->
              do i=0,ndp-1
                nd=ndpnd(i)                  
                if(next_gtr(nd).gt.nodess
     &            .and.next_gtr(nd).le.ndpnd(ndp-1)) then




common.F
 list and node (0:MNNODE)
### pv34.6.2

pv34.6.1
 - esolve.F when turn on cooling for feedback particle, set ram_p=0.0d0
   if du0 hit ulim, set du0=0.5*as_p
### pv34.6.1

pv34.6
 - UTHLIM* only for pressure for dv/d, but no limit for temperature. 
  Peff from Hopkins et al. 2011 eq. (1)
### pv34.6

09/01/2013
 set_value*.F
 maxntw=MAXNODE*

pv34.5.1
 - NSTH only for softening
 - NSTHLIM for star formation 
 - CSEFF=1.0
### pv34.5.1  08/01/2013

pv34.5
 - output TM_dt and maxrhog
 - no NSTHLIM
 - turn off cooling for feedback particle only if div_v>0
 - no SI_tnev,SI_tngmc
### pv34.5  07/01/2013

21/12/2012
tree opening criterion from Gadget-1 for QPTREEF

18/12/2012
calc_dv_du.F, treef.F
### pv34.4 use Gadget-2 treeopening criterion for both baryon and DM

17/12/2012
main.F calc_dv_du.F
 flags in the initial one set flags=1 and use normal TREE opening criteria
dmtreef.F
 use Gadget-2 treeopening criterion
### pv34.3gtodm only for np 1

15/12/2012
dmtreef.F set_valuedm.F calc_dv_du.F treef.F
 in the case of no communication, i.e. ncomptmax=0

14/12/2012
update.F
set_valuedm.F bring back to
        h_dm(pni)=SI_eps*(m_dm(pni)**THIRD)
dmtree.F  ... need to do for ldmtr, too.
 cx=cmx if np_dmtr=1
set_valuedm.F matching set_value.F
### pv34.3 add variable softening for DM particles

10/12/2012
set_valuedm.F set_ini.F
        h_dm(pni)=SI_eps*(m_dm(pni)**THIRD)*(ETAHDM/ETAH)
dmtreef.F treef.F
#ifdef QPTREEF more cut

starf.F *** corrected ***
          else if(nhp.gt.NSTH.and.div_v_p(pn).lt.0.0d0) then


tree.F, dmtree.F, ldmtree.F
 hm_* mass weighted mean h within tree?  (Saitoh & Makino 2012)

common.F tree.F, dmtree.F ldmtree.F - not yet
 #define QPTREEF
  turn on quadrupole expansion, but default is monopole

THETA=0.5

calc_dv_du.F - done
 - no dt constraints from v_x_r
  set vsigdt only if vsigav>0
 - omgh_p=0, when eps is fixed this is only for gravity

main.F -done
 treebuild called if SGRAV on and GAS or STAR on.
 h update after setvalue and setvaluedm

setslgtr.F, gtree.F
setsldmtr.F dmtree.F
 common nodess_gtr, nodess_dmtr, nodess_ldmtr - done
 use nodess_* for first search in setsl* -done

gtree.F dmtree.F ldmtree.F - done
 skip node np = np (daughter), like
          if(daughter_gtr(i).gt.0.and.(np_gtr(i)
     &      .eq.np_gtr(daughter_gtr(i)))) then
            nd=daughter_gtr(i)
            ...
            daughter_gtr(i)=daughter_gtr(nd)
 main.F, gtree.F: gtree global tree and ddecb even if nproc=1 - done
 making tree use the PH curve ... look ok.
### pv34.2 05/12/2012

04/11/2012
calc_dv_du.F
#ifdef COSM
 ax_p was calcualted twice and deleted 2nd one

27/11/2012
stime.F
 adjust dtmax with the margin of DTLIMIT*10
      else if(dtmax+TM_tot+dtolim.gt.OF_todt) then
27/11/2012
ddecb.F
Peano-Hilbert curve implemenation

### pv34.1 26/11/2012

25/11/2012
 update.F
  MAXR  adjust position, velocity and dvx
 MAXNODEDM
      parameter (MAXNODEDM=MNDM*3+MAXNODESEND*NCPU)
 use MAXNODEDM in dmtree.F, dmtreef.F and ldmtree.F

14/11/2012
options for no metal
no metal no mzHe_p or anything
### pv33.22

13/11/2012
 cooling check routine.
### pv33.21

esolve.F
- bug:
c *** decreasing u ***
...
          if(dabs(fhx(pn))/asp(pn).lt.EPSC) then
->
          if(dabs(fx(pn))/asp(pn).lt.EPSC) then

ddecb.F and ddecdm.F
 allow to shift the centre of the decomposition tree
### pv33.20

06/11/2012
 ddecb.F is updated for the case of ifndef SF_EFD

06/11/2012
      parameter (MINTMSFD=0.0001d0/TMUGYR)
->
      parameter (MINTMSFD=0.001d0/TMUGYR)

02/11/2012
starfd.F
          if(mzZ_p(pn)+mfd(pn).gt.0.5d0*MUSM*m_p(pn)) then
->
          if(mzZ_p(pn)+mfd(pn).gt.0.95d0*MUSM*m_p(pn)) then
22/10/2012
 define.F MININFESN to 1e-20 use it in esolve.F
 esolve.F
  do not take dabs separately for adiabatic+cooling and feedback term.
 starfd.F
  set flagc_p=-1 if flagfd_p is SNe II phase
 adiabatic phase till tcool>tdyn
 flagc_p for <=0: gas, -1 no cooling, >=1: stars
### pv33.19

05/09/2012
 calc_dv_du.F  no omg_p=1 where only eps_p if fixed.
### pv33.18.2

23/09/2012
 set_value.F mnit=100 from 50
21/09/2012
 change update.F to use RLIM in position update
### pv33.18.1

22/08/2012
 set_ini.F ifndef STAR set flagrf for gas.dat = 0
31/07/2012 gtree.F set_value.F calc_dv_du.F
 if np_gtr=1, cx and etc. should be cmx
 hm_gtr is just the maximum h within the node
### pv33.18

17/07/2012
 idpnd(0:MNEXD-1) -> idpnd(0:MAXNODE-1)

11/07/2012
 output.F
  output dt_p and hvsigdt_p
### pv33.17.6 : still have some problem in new parallel scheme for dm force

done:
 dmtree.F, ddecdm.F treef.F dmtreef.F ldmtree.F

tree.F
 if np is the same with daughter, then use daughter's cx,cy,cz,l
 down till the smallest node in the branch
c *** adjust cx,cy,cz,l_tr ***
      num = num_tr-1
      do j=level-1,0,-1
        do i=num,list(j),-1
          if(daughter_tr(i).gt.0.and.(np_tr(i)
     &      .eq.np_tr(daughter_tr(i)))) then
            nd=daughter_tr(i)
            l_tr(i)=l_tr(nd)
            cx_tr(i)=cx_tr(nd)
            cy_tr(i)=cy_tr(nd)
            cz_tr(i)=cz_tr(nd)
          endif
        enddo
      enddo
### pv33.17.5

delete domid_p
ddecb.F 
 sorting by order
### pv33.17.3

*** stable version only for gas, star system ***
set minimum h:
 gcdp.def GEPSLIM_G 
 define.F FH
 use h_p also in ltime.F for dyn 
use tree structure for pnd for set_value.F and calc_dv_du.F
### pv33.17.2 19 June 2012

*** dmtree.F, treef.F, dmtreef.F are on going.
correct Peano-Hilbert curve
 Tree use the same rule
main.F
 tcx change
ddecb.F, tree.F gtree.F
 c_nfp rule change

* set_value.F and calc_dv_du.F
 pseudo-node check: check these 3 first
                  if(proc_tr(nd).eq.ip.and.
     &              (np_tr(nd).ne.1.and.daughter_tr(nd).eq.-1)) then
 then
  no npnpd needed
* set_value.F and calc_dv_du.F   proc_gtr check
        if((np_gtr(nd).eq.1.and.rc.lt.rh)
     &    .and.proc_gtr(nd).eq.myrank) then
 and
c * check if the pseudo node or not *
          if(iproc.eq.0.and.daughter_gtr(nd).eq.-1) then
            if(proc_gtr(nd).ne.myrank
     &        .and.flagproc(pni).ne.proc_gtr(nd)) then
* treef.F
 nodese_tr check
        else if(np_tr(nd).eq.1) then
          if(iproc.eq.0.or.nd.gt.nodese_tr) then
 
define.F
 MAXNODESEND=70
#CENTRE0
 fix the centre at 0 in makeroot
 noto do this for gtree.F (much slower)
send more pseudo-tree structures (at least 8)
### pv33.17 since 13/06/2012

17/04/2012
 bug fix, set_value.F
        tivr(i+np)=0
->
        tivr(i)=0
 
bug fix
 flagc_p=-3 option taken off from set_value.F and calc_dv_du.F
### pv33.16

10/12/2011
 calc_dv_du.F
  bug: ARTFDM case was using tx,ty,tz -> txf 
 gtree.F tree.F dmtree.F ldmtree.F
  change in case of np=0
 tree.F dmtree.F ldmtree.F no 2nd makeroot, but use node 0 values
05/12/2011
 no div criterion for SF starf.F
07/11/2011
 tree.F ldmtree.F dmtree.F
 global tree
07/11/2011
 calc_dv_du.F, dmtreef.F set_value.F treef.F
   ndivcom=int((npprocmax+nprocs*nprocs)/MNB)+1
   ndivcompt=int((ncomptmax+nprocs*nprocs)/MNB)+1
24/10/2011
 calc_dv_du.F
   ndivcom=int((npprocmax+nprocs)/MNB)+1
   ndivcompt=int((ncomptmax+nprocs)/MNB)+1
30/09/2011
 no check for
      if(np.ne.nd(il)) then

21/09/2011
 dmtreef.F 
                if(ncompt.lt.MNDM) then
 define.F
      parameter (MNVALP=7*MNDM)
->      parameter (MNVALP=18*MNDM)
 dmtreef.F
#ifdef GAS
      flagtr=0
#else
      flagtr=1
#endif

30/08/2011
 gcdp.def if PINI no RHOINI
29/07/2011
 RANAZ id range and time lim
 SI_ranaz?
### ver. 33.15

26/07/2011
 update.F add MAXR for DM and star
20/07/2011
 calc_dv_du.F
  GLASS force from velocity
19/07/2011
 boundary.F, set_ini.F, cont.F and main.F
         if(id_p(i).lt.BCX_ndx) then 
...
         else if(npt-id_p(i).lt.BCX_ndx) then 
 and BCX_ndx
07/07/2011
 set_ini.F dt_dm=0.0d0
 ARTFDM  artificial force following Widrow et al. (2008)
### pver 33.14

30/06/2011
 FIXEDDMP  dvx and vn? still does not work for stars
 keep initial velocity for the case of using output as an initial condition
### pver 33.13

30/06/2011
 bug fix cont.F bdvals does not need to read nagravg
20/06/2011
 bug fix in ddecb for PINI. 
 p_p and etc. needed to be updated ddecb at step=1
19/06/2011
 bug in gtree.F
  in case there is no flagfd_p=0, bug ng>0
15/06/2011
 add GLASS option for getting stabilised initial condition
 only for the gas dp force in calc_dv_du.F
### ver.12

02/05/2011
add NOAVSWITCH

FIXEDP
add option to fix some particles ... id range in ini/fixedp.dat
 *** only for the gas particles ***
### pv33.11

30/05/2011
 output FITLIM in set_ini.F
20/05/2011
 calc_dv_du.F
 update to allow no SGRAV mode
19/05/2011
 gcdp.def and main.F
 add option of PINI, use original P from input.dat

27/04/2011
 add NOAC option
ldmtree.F copy from dmtree.F and change the id range
apply new algorithms to ldmtr, too.
### pv. 33.10

17/04/2011 bug fix
 calc_dv_du.F
c *** hm_gtr is not only maximum one but including crit*l_gtr
                    if(rh.lt.hmpnd(nd)) then
c *** from gather ***
                      rh=hmpnd(nd)
                    endif

31/02/2011
 cont.F add
          dtmnb_dm(i)=INF

21/02/2011
 update dmtreef.F
### pv. 33.9

24/02/2011
 cont.F changed to, not using MININF
          if(mfd(pn).lt.0.0d0) then
18/02/2011
 gtree.F 
  hm is largest distance from centre
 improve calc_dv_du.F
### ver. 33.8
16/02/2011
 procompt also should be smaller than MNB
15/02/2011
 treef.F
 common.F, dmtree.F, ldmtree.F
  numdm_tr, num_ldmtr
 calc_dv_du.F
14/02/2011
 set_value.F
 num_gtr common.F
09/02/2011
 make an option when the sending or received particles excceeds the memory size
### ver. 33.7

11/02/2011
 use V_BETA=1
 calc_dv_du.F
  turn off vsigav=(tdvr(pni+npj*7)+cs_p(pn)+v_x_r)*0.5d0
in mw disk run,
 no special vsigav helps a lot? especiall when wind happenning.
stub1d
 almost no difference.
sedov 
 V_BETA=1 looks ok 
 vsigav for expansion does not change much, but V_BETA=3, usually gives
 better results, but V_BETA=1 could be an ok compromise.
08/02/2011
 big bug in esolve.F
      mjc=ULJMFAC*6.0d0*(G**1.5d0)/
     & ((M_PI**2.5d0)*(dsqrt(GAM*(GAM-1.0d0))**3))
  was
     & (M_PI**2.5d0)*(dsqrt(GAM*(GAM-1.0d0))**3)
07/02/2011
 output.F
  no output for gmc 
  output m and n for feedback gas particles
 starfd.F
  update tmzZ_p and etc. for star which turning into the gas.
 ltime.F, to ensure block TM_dt
      if(TM_dt.gt.TM_ldtmin) then
        TM_kn=int(dlog(MGTU*TM_dt/TM_ldtmin)/dlog(2.0d0))
      else
        TM_kn=int(dlog(MGTL*TM_dt/TM_ldtmin)/dlog(2.0d0))
      endif
      if(myrank.eq.0) then
        write(6,*) ' TM min, kn, setted dt,ldtmin=',TM_dt
     &   ,TM_kn,TM_ldtmin*(2.0d0**int(TM_kn)),TM_ldtmin
      endif
      TM_dt=TM_ldtmin*(2.0d0**int(TM_kn))

06/02/2011
 allow to use mgr>6
 new tzy.cmd.datb
 SI_snii is the mass group limit including SNe II
  if flagfd_p < SI_snii use time scale of 
  setyield.F, esolve.F
 No time constraints option #ifndef DTFD
 THLIMIT ... highest tempearature limit. Just set a very high value.
 
### pv 33.6  6 Feb 2011

01/01/2011
 main.F WTIME for update only one time for metaldiff and updatevn
 MPI_BCAST for flagt
31/12/2010
 starfd.F ltime.F
  flagt_p()=2, dtg_p also set to dtr_p. This is for new feedback particles.
27/12/2010
 CDYN=CCFL=CGRAV=0.2 
  0.4 gives less accurate energy conservation in sedov test.
 LDUFD=1e4 seems ok.
27/12/2010
 *** still missing Stellar wind but much less ***
 update.F calc_dv_du.F
  fixed eps, set
          omgh_p(pn)=1.0d0
          zetah_p(pn)=0.0d0
 ltime.F stime.F 
  dt eps for GEPSLIM_VH
 starfd.F
  do not update t*_p for new feedback particles
 cont.F
  do not update t*_p for new feedback particles
 main.F
  update flagrfd_p after cont
 maximum time step for star formation feedback MINTMSFD=1 Myr
 feedback also for first dt (transition phase) in 2nd dt.
 improve feedback timestep.
### pv33.5

27/12/2010
 bug in calc_dv_du.F
 the MPI for flagrfd_p was using trbuf rather than tibuf

26/12/2010
 allow 4, 8 dt in ltime.F
21/12/2010
#ifdef MINDT_SFD
 not set TM_dt for particles received stellar feedback
 starfd.F

15/12/2010
vnx correction due to dtg changein ltime.F, starf, ranaz
update star's velocity using dtg_p
add RANAZ
 move particles azimuthally at random

09/12/2010
*** DDEC2 off works better ***
stime.F ltime.F
 da/dt criteria wasn't right. since pv33.3
it requires too small time step for DM in B85 collapse test
only if DTDADT
-> but it requires too small time step, so now off

dmtreef.F  06/12/2010
treef.F    calculate dv*_p from all (i.e. communication) baryon,
  from all dm, and then all ldm, using flagtr
dmtreef.F  ldmtr is not done yet.
dmtree.F
ddecdm.F
apply new parallel scheme to dm tree
### ver. 33.4

03/12/2010
 update cont.F and forcont.F

01/12/2010
calc_dv_du.F
 A.C. for positive v_x_r recommended in Price & Monaghan (2005)
 working ok with sedov test

23/11/2010
 FAST (Saitoh & Makino)
 ongoing...
 ddecb,cont,
   ax?_p dv?_dm, ltg, dtg
 set_ini.F
 starfd.F
  update t*_p like 
          tnsn_p(pn)=tnsn_p(pn)+mfd(pn)
 starf.F
  use tg_p after star formed
 treef
  use dtg_p for limitter
 calc_dv_du
   update pdv*, and separate dvx and ax 
 tree
  only when na*t is zero, can be skipped.
 common.F
  dtg_p, pa?_p
  list_ap, list particles for gravity update 
  use dtg_p
  dvx_p for gas is only for hydro
 main.F
  flagdta
  no nbh
 stime.F

 no dt limiter for gravity
### ver. 33.3

16/11/2010
 stime.F
  TM_k=0, step<=3
12/11/2010
gtree.F
add
c *** check there is any imported nodes if yes, change next_gtr(0) ***
        if(numtr0.ne.numgtr) then
          next_gtr(0)=numtr0
c *** set end of tree ***
          next_gtr(numgtr-1)=0
        endif   

10/11/2010
tree.f
 edit only for gas and stars.
dmtreef.F treef.F
changed to 
c *** check for timestep ***
                if(si.lt.1.0d0.or.sj.lt.1.0d0) then
tree.F
 try to mimic gtree.F
gcdp.def
 update for the case w/STAR, but GAS is not on
08/10/2010
gtree.F
 buid a tree for each domain
 neet to be done every time, set_value.F changed h
setslgtr.F
 start from node=1
12/10/2010
 working, but using a root tree is not good way to go
 -> pv33.2-1

calc_dv_du()
move 
c *** check for timestep ***
after flagv.eq.0 and delete 
                if(si.lt.1.0d0.or.sj.lt.0.0d0) then
since it's wrong... 

domid_p domid_dm
 domain id after domain decomosition (important for 2 level decomposition)
set_ini.F forcont.F cont.F

gtree.F
set_value.F
setslgtr.F ... need for a check when getting daughter_gtr

tree.F
 *** bug *** -> not bug... it is right!
  compute_mass also calculate hm, therefore need to do even if
  there is no sgrav
improve parallelisation: use pseudo node and identify particles
 need info of the other procs.
### pv33.1 02/10/10
05/10/10
 ddecb.F ddecdm.F
  DDEC2 devide further
  to improve cash access, ddecdm also use pnord
improve parallelisation
### pv33.1 02/10/10

calc_dv_du.F
 before treeforce, store original h, and use min limited h.
 store in dtcr1
set 
for SPH no h limit, but eps limit
### ver. 32.16 29/09/2010

13/09/10
 se_value.F set_valuedm.F
c              if(flagi(pn).eq.10) then
c                flagi(pn)=0
c              endif
  when nnb_p or nnb_dm=0
  

gcdp.def
 FIXEDDMEPS
set_ini.F update.F set_valuedm.F

optioin for fixed eps for n-body 
### ver. pv32.15 21/08/2010

core dw/dr only for pressure gradient
 gcdp.def
  COREDW
 common.F
  dwdsc_tb
 kernel.F 
### ver. pv32.14 10/08/2010

05/08/2010
 cont.F 
  add flagrfd_p=0
  set zetah, and omgh
 stime.F for no gas version

27/07/2010
 no nore dw version

12/07/2010
 set_ini.F
  reading star-metal.dat had an error, parallel job was wrong.

### ver. 32.13

17/06/2010
 TM_k=0 if step<=5, to avoid suprious effect from initial condition

16/06/2010
starf.F
 for no defined(SF_EFD) || defined(SF_ZFD)
gcdp.def stime.F
 add NOIDT

gcdp.def
esolve.F
 UTHLIM_POLY or UTHLIM_JM

esolve.F
set UTHLIM from ULNH,ULNB and etc.
### ver. 32.12 08/06/2010

08/06/2010
 update set_ini.F
updateu.F
 since pv32.9: virtualp_cs was wrong...
 ulim from mjeans calculation and power is parameter.
### ver. 32.11 07/06/2010

25/05/10 bug fix.
 calc_dv_du
                if(flagv.eq.0) then
->
                if(flagv.eq.0.and.tivr(pni).ne.0) then
  for flagrfd criteria
 no vsigdt from feedback particles.

08/05/2010
 updateu.F no cool case, bug fixed
 flagfd_p cut in gtree(), no cut in set_value.F, calc_dv_du, setslgtr

### ver. 32.10 08/05/2010

07/05/2010
 low NSTHLIM is not good. set NSTHLIM=1e8
 dtyields.F
  use tspiz only when age is between step
 bugs in set_value.F, tivr set was wrong
 setslgtr.F add flagfd_p

05/05/2010
 no set_values.
  starf.F update.F 
  starfd.F
   after dtyields feedback particles -> gas with flagfd_p>0
  calculate u_p and etc. in calc_dv_du.F
   -> starfd.F, update.F (udatealpvu, updatesl, updatep_cs, metal_diff)
    , ddecb.F, set_value.F, updateu.F (only for COOL),
    , stime, ltime no dtu constraints for star due to no u_p
    , main.F (set flagfd=-flagfd)
 main.F update.F (no flagfd)
### ver. 32.9

04/05/2010
 ZDFCFAC for CSZDIFF

02/05/2010
 test: set_ini.F set eps by NSTHLIM -> too high SF, due to too many 
  particles passed NSTHLIM
 -> eps < NSTH

30/04/2010
 ZDFCFAC for factor of metal diffusion coefficient (calc_dv_du.F)

22/04/2010
 cont.F... bug reading flagfd_p was wrong.

16/04/2010
 output.F no gmc output when ascii output
 DU_UPU=0.05

CCOOLEDT ... constraints in esolve.F
CCOOLRIDT ... constraints in reionization
CCOOLSDT ... constraints in *time.F
gcdp.F
#define WTIME  to output time spent
esolve.F
 only fd=1 can be adiabatic
### pv32.8fd1ad 09/04/2010

*time.F
 no hydro dt constraints on feedback gas particles.
### pv32.8 08/04/2010

c  only flagfd_p=1 is adiabatic -> ver.32.7fd1ad
flagfd_p=2 can also be adiabatic
esolve.F
 set ulim from jeans criteion
 bug fix: wrong dt was used when ram(pn)=0 during iteration
define.F
 JMFAC=1.5d0
 TSTH=1.0
 no TLIMIT
31/03/2010
temperature floor from Jeans criteria
### pv32.7

18/03/2010
 esolve.F
  subtime step for cooling 
  CCOOLSDT
### pv32.6

18/03/2010
 only if Gsn_p>0, adiabatic
  calc_dv_du.F
 cooling dt limit off. -> keep it (no OB association with sphism
  cloud collapse test)
 CCOOLDT is parameter
 ltime.F change dti also from cooling constraints.
### pv32.5

17/03/2010
 NSTHLIM density limit for instant star formation
 no gmc or evapolation
### pv32.4 


16/03/2010
 output time in Gyr, if star is on.
 SI_esng=SI_esns/SNEU
 starfd.F
  cound ngfdt before flagfd_p of last feedback particle is changed.
 no SI_esng or SI_zsng
 SI_zsns(0:NYEL-1) keep all feedback of all the elements
 MININF=1.0e-9

08/03/2010
 output.F, forcont.F, cont.F
  writing order is changed. npjr(ip) number of receiving particles

### ver. 32.3

05/03/2010
 prefer ETAH=3 SNEU=0.1
04/03/2010
 set_value.F
   check for too small h, use nnb_p rather than rho_p
26/02/2010
 starfd.F: no age adjustment
 set_ini.F: SI_eps <- NSTH
25/02/2010
 cont.F
  set p_p and ram_p for stars, too.
 starfd.F set vsig_p=0 for feedback star
 calc_dv_du.F myu_p=MYU for feedback star

20/02/2010
 stime.F ltime.F
  testing dt< h/vsig, but default is no constraint

19/02/2010
 mz*0_p
  set_ini.F starf.F dtyields.F ddecb.F cont.F forcont.F
 read tzy.cmp.dat produced in metal/WW+vdHG/tzycmdiff
 common.F
  no mzZr_*
  no ms0_p
  add mz*0_p to keep original abundance for stars.

18/02/2010
starf
 set vsig_p=0 in evaporation
ddecb.F output.F cont.F forcont.F
 ndbmet output vsig_p
set_ini.F
 vsig_p
main.F
update.F
 metal_diff()
calc_dv_du.F
 set zdZ_p zd*B_p
common.F
 vsig_p, zdA_p, zdHeB_p...zdZB_p
 SI_esns, SI_zsns...energy and metal output
gcdp.def
#define METALDIFF
 metal diffusion
### pv32.2 18/02/2010

18/02/10
 calc_dv_du.F
   feedback particle does not take into account hydro force.
 set_value*.F
  there are a couple of bugs in do i=0,??? ->  do i=0,???-1

17/02/10
 set_values
  all h_p=hmin, nit=0 case, and even if using av(pn)
16/02/10
 update.F
  #ifdef MAXR
   stop particle at rmax in updatevn
 starf.F
  for evapolation criteria, cooling time is calculated if cooling is active.
 output.F
  format of system.dat is changed.

09/02/10
 stime.F and ltime.F 
  no Gsn_p time constraint if flagc_p=10
 set_value.F
  if flagc_p=10, only gas contribution.
  calcualte u_p for all the particles
 starfd.F
  setting as_p had bug.
 starf.F
  adding GMC formation and evaporation.
 SI_tnev: number of evaporation, SI_tngmc: number of GMC formed
 starf.F set_ini.F cont.F forcont.F output.F

make GMC cloud first (flagc_p=10 (used in ddecb), and in stars' list)
CSEFF=0.01 (Krumholz et al. )
feedback period age+duration of star formation
### pv32.1 8/02/10

05/02/2010
 set_values.F
  if flagfd_p<0, use setslgtr
03/02/2010
 cool.F
  donnot extrapolate at T<TLIMIT
 ddecb.F
  bug fix: ram_p was not in. because z may change, need to keep.
 starf.F, starfd.F, calc_dv_du.F
  set ram_p=0
02/02/2010
 dtyields.F
   multiply SI_nsp to match total mass of a star cluster. 
 starfd.F 
  no set_value after ns,ng changed, because using vvnx_p and etc.
 common.F set_ini.F
  SI_tnsf: total number of star formation particles.
 output.F forcont.F cont.F
  binary output of flagfd_p
 set_ini.F set initial TM_dt=0
  set ts_p=0.0d0 initially
01/02/2010
 set_ini.F read flagfd_p in star.dat
 edit to start with star*.dat

28/01/2010
 constraints from feedback 
  set Gsn_p at set_ini.F cont.F and starfd.F and use it 
  in stime.F and ltime.F with TMsf_dt
  LDUFD: lmitted factor of increase of delta u by feedback
 even if not SGRAV
  do set_values and treebuild 
 set_values.F
  move to before 2nd calc_dv_du
  if (flagfd_p<0) set h_p only with gas and particle itself.
  set u_p and flagrfd_p (setted to 0 before set_values.F, not
   fully satisfactory, because large h_j particles are ignored,
   but it won't be more than 2 dt difference)
  <u>=(Sigma m_j u_j)/rho_i
 set_ini.F cont.F
  call dtyield even if ns.eq.0
 dtyield.F
  track mej_sn just in case.
 common.F setyield.F
  nsp_ytb: number of star's mass group which end up to feedback gas
  nspi_ytb: id where the specific mass group start
  tspi_ytb: initail values and time
  nsw_ytb: number of stellar wind 
  add nsw_sn -> cont, ddecb, set_ini, starfd
 define.F
  MNSPYTT
 starfd.F
  star -> gas
  if particles become candidates of gas feedback, make them active particles.
  update as collisionless for one step,
  and calculate u_p and etc., with set_values.F, then, change to gas in starfd.F
 define.F
  CSEFF=0.1, XHSOL
 NO ETAHS
  common.F  
 starf.F
  using ran1() for two probabilities
  nhp assuming XHSOL
  star formation check for every time step (not only active stage)
 SI_nsp number of different star particles -> flagfd_p
 use constant mass for baryon particles
### ver.32.0 (copy from 31.23)  25/01/2010

20/01/2010
 esolve.F
 no cooling for feedback particle
### ver.31.23 (copy from 31.22)  20/01/2010

20/01/2010
 esolve.F
### ver.31.22 (copy from 31.20) add cooling. 20/01/2010

18/01/10
 lctime(), stime()  if flagrfd_p ne 0, set DTSF
 copy set_value() back from pv31.18
 calc_dv_du()
   if flagv=0, set flagrfd_p -> no need in ddecb
   use MPI_GET_COUNT
 set_ini()
   flagrfd=1, if flagfd<0
 starfd()
  if feedback is on, use the minimum timestep.
put energy on only the feedback gas particle
### ver 31.20 18/01/10

15/01/10
 add flagfd_p for feedback gas...
  #if defined(SF_EFD) || defined(SF_ZFD)
 Delete nnbfd_p (keep SI_mms for later)
 common.F set_ini.F ddecb.F
 - gas.dat requires 'flagrf' info to read or not flagfd_p.
 no flagc_p=2 for feedback star
 no set_valuefd(), use rho_p for weighting. no wsne_p
 starfd(), no mass or momentum feedback
   no metal feedback
 set_value(): set flagfd_p
 ltime(): DTSF constraints on feedback gas.
 main.F: feedback timing is wrong.
  feedback every minimum timestep

changing a whole star particle to a gas particle (just for a test case
that starts a gas particle that is already turned into the gas, and
start ejecting energy.)
### ver 31.19 15/01/10

12/01/10
 adding DTLIMIT define.F ltime.F
 *** note that only adiabatic case is entropy form.
 feedback energy was wrong.
  starfd.F  Gsn_p is per mass unit
  updateu.F 
12/01/10
 add constant energy feedback test case to CONSTFDE gcdp.def starfd.F
### ver 31.18

21/12/09
calc_dv_du.F main.F set_values.F update.F starfd.F

allow star without self-gravity
### ver 31.17 copy from pv31.15 

28/09/09
 main.F
  set p, cs, as after ddecb at step=0
 calc_dv_du
  using u_j from p, rho, cs
  dwij not including omega
21/09/09
 common.F add as_p
 set_ini.F, cont.F, ddecb.F
 calc_dv_du.F ndu_p -> (gam-1)/rho^(gam-1) (du/dt)_diss
 updateu.F, boundary.F update.F (updatep_cs)

### ver. 31.15 copy from pv31.15 (21/09/09) ... entropy version.

16/08/09
 count time for subroutines in starfd

13/08/09
 setcool.F
   MPI_BCAST for SI_zeor also in non-cosm case.

A.C. source term devided by sqrt(u)
### ver. 31.13

30/06/09
 set_ini.F

24/06/09 
 set_ini.F for no star and with star version

16/06/09
 no gas case
 main.F

note:
 set_ini.F 
   TMsf_dt=0.0d0 before dtyields
 set_valuefd.F
        if(nnbs_p(pn).le.0) then
   is not good idea...
 Delete
   nnbs_p, hs_p 
 but nnbfd_p integer.
 SI_mms to count mass loss by SNe
starfd.F set_valuefd.F
 SNe feedback using gas smoothing length.
### ver.31.12 09/06/09

record time in global varables.
### ver.31.11 08/06/09

06/06/09
 starf.F
            p(pn)=(1.0d0-exp(-cs(pn)*TMsf_dt/tdyn(pn)))
->            p(pn)=(1.0d0-exp(-cs(pn)*dt_p(pn)/tdyn(pn)))

29/05/09
 a bit of editing
  starf.F
 set_valuefd.F
  try hs update with NNBFD, if hu-hl<0.1 h, bisection

27/05/09
 star.F -> starfd.F
  bug: not doing feedback()  fixed.
26/05/09
 esolve.F
     &      (dabs(fx(pn))/uip(pn)).lt.EPSC.or.dabs(fhx(pn)/uip(pn))
   may be better for high u.
starf.F 
 only active gas can form stars
c pv31.10 24/05/09, because nnb often get 0 after SF
c     &      /ETAHS)
star.F main.F
update.F
 hs>h
split star and feedback.
### pv31.10

20/05/09
tar.F
 set hs_p after h_p
cont.F
        dtmp(0)=TMsf_dt
        TMsf_dt = 0.0d0
        call dtyields(ng,ns)
 TM_dt was used.
ddecb.F
        tdvr(0)=TMsf_dt
        TMsf_dt=0.0d0
        call dtyields(ng,ns)
        TMsf_dt=tdvr(0)

 ltime.F
stime.F
 check cooling time
      do i=0,np-1
 ->
      do i=0,ng-1

19/05/09
 gcdp.def set_value.F update.F set_ini.F star.F
 GEPSLIM_G
  gas softening limitter.

17/05/09
 main.F
  correct TMsf_dt and TMsf_t

16/05/09
 set_value.F update.F set_ini.F star.F
 CEPS only for collisionless particles
 main.F
      if(lstep.eq.0.or.TM_tot+1.2d0*TM_dt.gt.TMsf_t+DTSF) then
  for call star()

### pv31.7

13/05/09
 esolve.F minor revision
 + EPSC check with linear (hu-lu)/uip
 EPSC=0.001 should be enough.

12/05/09
 define.F set_ini.F main.F cont.F forcont.F star.F dtyields.F update.F esolve.F
 stime.F ltime.F
 call star() only every DTSF
### pv 31.6 ###

08/05/09
 star formation criterion
   NSTH, TSTH
### pv 31.4 ###

03/05/09
 cool.F
  myu in lowest density was wrong...

25/04/09
 ddecdm.F bug
                else if(phkeyr(tivr(i)).eq.phkey(list(k))
->
                else if(phkeyr(tivr(i)).eq.phkey(pnord(k,it))

24/04/09
 ddecb.F
  separate gas and star
 ddecdm.F
              if(phkey(i).eq.phkey(j).and.i.ne.j) then
  when  checking number of overlap of phkey

23/04/09 
 set_valudm.F
  add 1.0000001d0 on
              else if(h_dm(pn).le.SI_eps*(m_dm(pn)**THIRD)*1.0000001d0
 stime.F
      if(ng.eq.0) then
      if(np.eq.0) then 
22/04/09
 stime.F
   TM_k=8 max even without MULTI_LEV
16/04/09
#ifdef MEXT
 adding MEXT
### ver. 31.2
 
### ver. 31.1

14/04/09
 ERRNBFD=0.1d0
  which is compared with diff/NNBFD
 setslgtr.F
  set tdvr for the case of np_gtr(0)

13/04/09
 ddecb.F
  if ns=0, set nas=0

11/04/09
 set_values.F
  match with set_value.F
 cool.F
  id wasn't calculated...
 esolve.F cool.F
   change ulim.
    if heating is dominant, not take into account ulim
   T cut for myu_p
 main.F
          if(1.0d0/SI_a-1.0d0.lt.SI_zeor) then
            SI_flagrad=-NITEOR
          endif
   since in cool.F fixing id depending on SI_flagrad
 cool.F
   change order of calculation.
          radp=10.0d0**(cradp-dlog10(ERU))
     &     -10.0d0**(hradp-dlog10(ERU))
          radp=radp*(10.0d0**(2.0d0*lognh))
 esolve.F
    ulim*MYU/myu_p(pn)

09/04/09
 set_ini.F
  missing tmzZr_p.

08/04/09
 set_values.F
           else if(flagi(pn).eq.1) then
  change flagi criterion

07/04/09
 esolve.F
     &      dabs(hu(pn)-lu(pn)).lt.EPSC
 for criterion
 set_ini.F
  to read diskm output including stars.
 gcdp.def
  STAR for including star, but not star formation

06/04/09
 star.F
  new born stars -> dtr=TM_dt
 cool.F
  before EoR, use Log nh=0 cooling.

03/04/09
 set_ini.F
   dtr, dt set to be INF for first step.
 stime.F
   reset dtmnb
   update SI_flagrad when setting TM_k=0.
 define.F, stime.F, ltime.F
   NITEOR ... number of iteration for EoR


02/04/09
 define.F
      parameter (M_PI=4.0d0*datan(1.0d0))
 common.F
      SI_omgb
 ltime.F,stime.F
  if dt < 0.1 ndu_p-ram then make particles active dtr_p=TM_dt
 star.F
  if get feedback, make particles active, and dtr_p=TM_dt
 main.F
      call updatealpvu(nag)
  after star()

01/04/09
 stime.F
  change the way to update SI_flagrad
 cool.F
  check SI_flagrad<=-2 for cooling.

29/03/09
 esolve.F
  update p_p after flagu=0

19/03/09
 use z=zmax cooling at z>zmax, but ignore heating.

10/03/09
stime.F main.F common.F
 SI_zeor after zeor, take 0.1xdu/dt condition and TM_k=0 for 10 times.
bug fix:
 in virtualp_cs 
   use only ndu_p for update.
 add flag to esolve
 setcool.F didn't send z,nh,met,t grid info.

06/03/09
 edit ltime.F stime.F for adiabatic simulations.
 PR07 version of alpha_v evolution.
### pv31.1 ###

27/02/09
 stime.F
  dtmax check even if there is no DM.

17/02/09
 gcdp.F
  no UVB, ZCOOL, all goes to COOL
 common.F, set_ini.F, output.F, forcont.F, cont.F, ddecb.F
  no fHI_p and etc.
  add myu_p, ndbhyd=5
 define.F
   DU_UPU=0.1 since d Log T=0.25
   EPSC=1.0d-3 should be enough.
 esolve.F: minor change. initially
          fhx(pn)=1.0d0
          fx(pn)=1.0d0
  no input of uip,dti
 no subdtdu.F, hcini.F hhecool.F radrates.F spsolve.F
 call energy_solver from updateu.F
 metch.F -> cool.F
 setmetch.F -> setcool.F
 
 stime.F calc_dv_du.F
  no radiative rates

cooling rate made on inv/radproc/cloudy/dkmod/chrate/chgrid
 with ver. c08.00
  dLogT=0.25 (12/02/09)  from 2.0 to 9.0
  dLogZ=1.0              from -3 to 1
  dLognH=1.0             from -5 to 5
  dz=0.25                from 0 to 6

 use dt constraints from kinematics.
 use cooling rates from cloudy.
### pv40.1 17/02/09

13/02/09
 define.F and set_ini.F edit for only DM and no cosmological case

17/01/09
 Note in output.F:
  SI_esng may not eqaul SI_esns, due to individual timestep
 cont.F
  dtr_p=0
 ->
  dtr_p=0.0d0

04/02/08
 set_ini.F: minor change
            write(6,*) ' mdm (level ',il,') = ',m_dm(nc)
->
            write(6,*) ' mdm (level ',il,') = ',m_dm(nc-1)  

19/12/08
 subdtysp.F
        if(teip(pn).lt.dtcr1(pn)) then
  ->
        if(teip(pn).lt.dtcr1(pn).and.teip(pn).gt.0.0d0) then
          if(dtcr1(pn).lt.dtmin) then
  ->
          if(dtcr1(pn).lt.dtmin.and.dtcr1(pn).gt.0.0d0) then


18/12/08
 star.F
  delete 
        do i=0,ng-1
          pn=list_ap(i)
          flagc_p(pn)=0
        enddo
  because doing the same twice.

16/12/08
 define.F
 NDSTEPDDEC=32

11/19 
 edit main.F a bit (just for log output)
 increase ERRNBFD=3.0
 mnit=100 in set_valufd.F

10/20 version
 CCFL=0.15    V_ALPHAMAX=4.0
 update.F
        sav=sav*(V_ALPHAMAX-alpv_p(pn))
     &    *dabs(div_v_p(pn))
     &    /(dabs(div_v_p(pn))+SHAREV*arot_v_p(pn)
     &     +0.0002d0*cs_p(pn)/h_p(pn))
 - no difference from one without div/(div+fac arot...) term.

10/19
 define.F
   V_ALPHAMAX=4.0
   CCFL=0.1
 update.F
        sav=div_v_p(pn)**2  
        sav=sav*(V_ALPHAMAX-alpv_p(pn))
### pv30.9 10/19 higher alpha

9/18
 ltime.F
  change dtr_p decision. no dtmin,
9/16
 softened node multipole
  kernel.F
 use  m?_*tr common.F, *tree.F
### pv30.8 copy from pv30.7.4.8 9/16

9/17
 use HI and H2I for H2 cooling
9/16
 hhecool.F
  correct H2 cooling
9/13
 *** bug in dmtreef.F 
   l_r2.le.theta -> l_r2.le.theta2
9/12
 add ram_p in cont.F and forcont.F
*** bug in H2 cooling ***
 See Yoshida et al. (2006)
 Tom Abel's webpage
  nh x nH2 x lambda(H2, GP)
 hhecool.F
        hdl = (hdlr+hdlv)
        if(ldl.gt.0.0d0.and.
     &     (T_gas.gt.TLH2C.and.T_gas.lt.TUH2C)) then
          edot_H2 = -((H2I+H2II)*(HI+HII+HM)*(base_nden*2)
     &      *hdl/(1.0d0+hdl/ldl))
        else
          edot_H2 = 0.0d0
        endif

9/11
 update.F
  DHFLIM=4 will constaint, maximum increase of H   
9/12
 add ram_p in cont.F and forcont.F

*** bug in H2 cooling ***
 See Yoshida et al. (2006)
 Tom Abel's webpage
  nh x nH2 x lambda(H2, GP)
 hhecool.F
        hdl = (hdlr+hdlv)
        if(ldl.gt.0.0d0.and.
     &     (T_gas.gt.TLH2C.and.T_gas.lt.TUH2C)) then
          edot_H2 = -((H2I+H2II)*(HI+HII+HM)*(base_nden*2)
     &      *hdl/(1.0d0+hdl/ldl))
        else
          edot_H2 = 0.0d0
        endif

9/11
 update.F
  DHFLIM=4 will constaint, maximum increase of H   
 subdtdu.F
   increase
     maxit=1e9
9/10
 variable SI_eps, set_ini.F, main.F
      SI_epsa=SI_eps*2.0d0*(m_dm(0)**THIRD)/(dxi(Ini_mul)*etahmax)
      if(SI_a.lt.SI_epsa) then
        SI_eps=(1.0d0-SI_epsa+SI_a)*SI_eps
      endif

 use hm for softening
### pv30.7.4.8 copy from pv30.7.4.6
9/9
 only use sqrt(h/dv/dt)...
 common.F
  no minhv_dm
### pv30.7.4.6 
9/9
 try: use proper motion for velocity criteria.
### pv30.7.4.5 
9/8
 don't use node if r<h+crit x l
### pv30.7.4.4 
common.F
 hm_tr, hm_dmtr
treef.F dmtreef.F
### pv.30.7.4.2 9/4 2008, considering ETAH difference for baryon/DM tree node

9/4
star.F
 when forming stars.
c rho_p(pn)=0
c *** for time ***
          flagt_p(pn)=0
          dtr_p(pn)=0.0d0
9/2
set_value*.F
 even diff<ERRH, check minimum h.
define.F set_value*.F
 DHFLIM=4 will constaint, maximum increase of H 

stime.F
 initialize flagt_* dtr_* 
update.F
 updatesl() was so wrong...

8/30
 bug in number of tivr tivs...
define.F
  add MNIVALP -> tivr(0:MNIVALP)

8/28-29
 because of individual time-step for updateu and etc.
 need some flag and etc. for the particles who is affected by dt_nb
common.F
  flagt_p, flagt_dm  ... flag for changed dt
  dtr_p, dtr_dm ... required dt 
   need to be ddecb and cont
  if flagt is not 0, then set dt to 
 -> set dt to the next time, but use dt since their lt_p.
  Although it's diffused over larger dt, it is time resolution for 
  the particle.
star.F
 no dt correction for the particles affected by SNe

8/27
 ltime.F
          if(dt_dm(i).gt.dtmnb_dm(i)*1.0001d0) then
->  
          if(dt_dm(i).gt.dtmnb_dm(i)) then

8/26
 define.F
  NNBFD
 kernel
  wn_tb use Thacker et al. kernel.

### pv.30.7.4.1 8/26 2008 apply bi-section for set_valuefd.F for feedback
8/26
 set_valuefd.F
  set_value for feedback.
  use Wn for h, but use W for weight of feedback.
 add SI_eps*
  in cont.F and forcont.F
### pv.30.7.4 8/26 2008 apply use set_valuefd.F for feedback

8/25
 set_ini.F
  use (1+ERRH) to set h_p
 common.F
  SI_epsa,SI_eps0 to change SI_eps depending on the mean separation.
  -> set_ini.F main.F cont.F
 no div criterion for the limit of softening.
 stime.F, ltime.F
  for N-body  dt = h/ETAH x ...


8/23
 common.F
  SI_eps

### pv.30.7.3 8/23 2008 apply the limit of softening. ###

8/21
 set_value*.F update.F
  mnitb=5 and h*0.9, h*1.1 to increase and decrease.
 common.F
 wn_tb, dwndr_tb

use different kernel for DM and stars
### pv.30.7.1 8/21 2008 apply the new kernel. ###

set_value.F treef.F calc_dv_du.F dmtreef.F

w_tb,dwdr_r_tb, dphidr_tb, dphidh_tb
NKTAB+1: number of grids

use the table for kernel and 
### pv.30.7 8/20 2008 ###

8/19
 *** bug fix in gtree.F ***
!ocl novrec (hm_gtr)
        do d=0,7
!cdir nodep (hm_gtr)
          do i=0,npare
->
          do i=0,npare-1

8/13
  no v constraints on dt for N-body (DM, stars)

dtmnb_p dtmnb_dm
 calculate in calc_dv_du.F
 used in ltime.F
define.f
 FITLIM=4 ... factor for individual timestep limiter.

individual time step limiter
### pv30.6 8/11 2008

strategy for feedback:
 do neighbour search for star and gas separately.

note:
 send all the info including rho,omgh,div,arot,zeta
  and update p and cs
 need to change cooling and etc.
 figure out subdtustp.F later.

apply individual time step also for thermal equation.
 assume h,u,rho,div,rot never changed in individual timestep,
  only use virtual position.
 don't care for feedback, because they will be in active.
  only active particle update h
### pv30.5 8/11 2008

8/10
 stime.F
   -2>SI_flagrad>-9 set dtmin=dtmax

8/8
 *treef.F
  add softening also for node of trees using particle i's.

8/7 
 add setsltr() and setsldmtr() in set_values() and set_valuedm()
set_value* 
- tried
*** use analytic rho to update h.
          av(pn)=h_p(pn)-adv(pn)/(-3.0d0*rho_p(pn)*omgh_p(pn)
     &       /h_p(pn))
->
          av(pn)=h_p(pn)-adv(pn)/(-3.0d0*av(pn)*omgh_p(pn)
     &       /h_p(pn))
   -> However, it got worth.
*** using du0 to store original h, then
          if(dabs(h_p(pn)-av(pn))/du0(pn).gt.ERRH) then
 but seems strict condition.
 -> so bring it back.

8/5
 setslgtr.F
  update h for (star) particles with rho<=0
  call from set_value.F


8/1
 ETAHS=5 seems work better?
 do set_values every step for all the particles.
  
7/31
set_ini.F
cont.F
 increase the accuracy of OF_odt
set_valuedm.F
 no dw=dw/r -> dwr
treef.F
update.F
ddecb.F
set_value.F
 add
                  flagc_p(pn)=-2

7/30
set_values.F
set_value.F
star.F
main.F
 updatealpvu() before star()
common.F
 wsne_p for SNe feedback weight.
 div_vb_p for diversionce of star and gas field
 omghb_p to update softening of stars
 hs_p softening of stars.

 including cooling and SF capability
### pv30.4 7/30 2008

7/29
 cont.F: add reading SI_lbox
      if(Ini_flagcop.ne.0) then
        OF_todt = OF_odt+TM_tot
      endif

7/26 
 input for cosmological simulation

### pv30.3 (30.2 was trying to use MPI-2 I/O, but now worked)

7/24
 A big bug in stime.F ltime.F
              dtcr1(pn)=CCFL*hvsigdt_p(pn)
 ->
              dtcr1(i)=CCFL*hvsigdt_p(pn)
 but not much effect?

7/23
 output.F
  change output format 

### pv30.1.2

7/16
 edit
  set_valuedm.F, set_ini.F
  edit to make no blank *.for
  setparate gas.dat -> gas.dat gas-metal.dat gas-hhe.dat
  change output format

### pv30.1.1

6/27
 keep the pressure and thermal energy for SF on u_p and p_p
 no global.f
*.F edit
 main.F set_value.F calc_dv_du.F update.F updateu.F stime.F ltime.F
 output.F star.F (delete metal smoothing....)
 cool.F gtree.F treef.F dtyield.F setyields.F setuvb.F atfunc.F
 subdtusp.F hcini.F radrates.F esolve.F spsolve.F hhecool.F
 setmchr.F ddecb.F ddecdm.F boundary.f set_valuedm.F
 set_ini.F (no semic option)


change input through MPI-2 routine
preprocess also common block and etc.
### pv30.1 6/26 2008

6/23
 no input of h_p, if flagfg=0 (primordial abundance and ion) or -1 (ion)


no hm_tr or hm_dmtr
change input format. for non cosmological gas
### ver.29.5.3 gravity for gas and DM, but not stars

6/18
 set_value.F calc_dv_du.F change the for of dw in the case of s<0.5  
 ETAHDM seems to require bigger than 2.8 <- b85 test
  reasonable, if the mass is very different.
6/17
 treef.F dmtreef.F
  search till maximum rh in cell is bigger than r
  use ".le." instead of ".lt."
6/16
 set_valuedm.F
  values without baryon data, after b85 run.
 copy old version to set_valuedm.F.incb
6/12
 set_valuedm.F 
  values setted including baryon data.
 main.F updatesl.F
 ddecdm.f 
  need to send all the info, because they are update only for
  active particles.
 set_ini.F
  reading dm.dat
  format of gas.dat is changed. no h_p
 treef.f  dmtreef
 common.f global.f
  minhv_dm <- set_value_dm, because need velocity...
 stime.f ltime.f 
  use minhv_dm (still need for star to use hvsigdt_p)

6/11
 set_value.F
   add bi-section for safe.
### ver.29.5.2 gravity for gas and DM, but not stars

# ver.29.5.1 gravity only for gas.
6/11
 add B85TEST
  add extra force in calc_dv_du.F

6/10
 gravity only for gas 
 common.f global.f
   etah_p, omgh_dm,etah_dm,h_dm,rho_dm
   no eps_dm eps_p SI_flagsgrav
 set_value.F
   calculate zetah_p
 treef.f
   dphi/dr_i,j
   if h require more than theta criteria, ignore..., because
    break tree force.
 calc_dv_du.F
   small change for rh calculation. no rhj
 update.F
   add limit for updatesl
 main.F set_ini.F ddecb.F ddecdm.f
just for temporary, replace eps_dm with h_dm
 dmtreef.f ltime.f stime.f
### ver.29.5 adding adaptive softening from Price & Monaghan (2007) 6/10 2008

6/9
 stime.f main.f
  if step=0, kn=0

6/4 2008
 calc_dv_du.F
  introduce acfac
 add alpu_p divu_p
 global.f common.f set_ini.F calc_dv_du.F
 delete vsigmax
### ver.29.4 adding SIM2D+artificial conductivity switch 6/4 2008

5/29
 set_ini.F
 inic-test/
  to make initial condition for test simualtion.
### ver.29.3 set_ini.F independent from the initial condition. 5/29

5/28
 set_ini_wtunnel.f (back-up set_ini_wtkhi.f.agertz)
 -> set_ini_wtkhi.f
  with Price initial condition definition
5/22
 gcdp.def set_ini_shocktube.F
### ver.29.2 adding 1D version in gcdp.def

5/21 2008
 only take into account r<hi and r<hj -> back up to vhij/
  use etah=3 required. 2.8 is not good.
  but larger etah induce the symmetry.
 gather and scatter vgather/
  seems faster?
 stub test:
  Price (2008) alpha_AV switch is better than Roswong & Price (2007).
  alpha_AV is on only for r_v <0 is better in rarefaction.
  U_ALPHA=0.5?


5/19 2008
 common.f global.f
  omgh_p
 set_value.f
  only gather

D. Price et al. type SPH scheme with energy conservation scheme
### ver. 29.1 5/19 2008

 shocktube test: in parallel vy, vz gets bigger...
5/17-19
 set_value.f -> set_valu.F.halway
 * first just change artificial viscosity and see how it works.
 define.f 
 common.f, global.f
  alpv_p, vsigmax_p, hvsigdt_p
 ddecb.F, cont.f forcont.f
  alpv_p
 calc_dv_du.F update.F
D. Price et al. type SPH scheme, change only dissipation term
### ver. 29 5/17 2008

5/16
 NBN=60 is better in 3D shock tube

5/12 2008
 shock tube test
### ver. 28.5

5/11 2008

 adding capability of wind-tunnel simulation.
 set_ini_wtunnel.f
  SI_flagsgrav  global.f common.f main.f set_ini.f
 
 Makefile.wtun
### ver pv.28.4 5/11 2008

common.f global.f
 mzZr_ytb ... for the yields from Z_AGB - CNO

5/8 2008
 limit flux by div_v, only div_v mixing.

5/7 2008 ongoing...
optimization: using IMSL function+preprocessor
5/7 2008 metal mixing with metal scatter!
 SI_flagms
 common.f global.f set_ini.f
 gtree.f set_value <- for flagc_p and including gas in tree
### ver pv.28.3 5/7 2008

new cooling 
new tzy.dat -> tzy.v2.dat:
 mass loss from original abundance. 
### ver pv.28.2

3/28 2008
 new mtch.dat
 in inv/fsim/coolr/mcool
 fixed the problem of error in the density grid
 temperature till T=1e4 K

### ver pv.28.1

3/25 2008
 cont.f add SI_flagcosm sending list
 stime.f
  SI_flagcosm.ne. -> SI_flagcosm.eq. for baryon velocity time
 forcont.f cont.f
 need dv?_*() in cont.f... 
  from step output, need to be nadm,nag,nas=all
3/23 2008
 improving sorting on ddecb.f
   quicksort ... indexxl.f
 backup back/pv28-323gold
3/22 2008
 for MPI_GET_COUNT use istatusr
 common.f tdvs(0:MNDM-1)->tdvs(0:MNVALP-1)
3/20 2008
 add time keeping in main.f

3/05 2008
 ddecb 
  no arot_v_p with arot_v_p in back/pv28-305gold
 set_value.f
  ireqs,ireqr error fixed for back/pv28-303gold.
3/03 2008
 - cont.f forcont.f <- haven't checked yet.
  nprocs or SI_nof cannot be changed.
 back/pv28-gold with new calc_dv_du.f and set_value.f
3/02 2008
 - changing set_value.f and calc_dv_du to set flagc_p=-2
  for the particles which needs communication.
 -bug in calc_dv_du
         rh = 0.5d0*(tdvr(pni+ng*6)+hm_gtr(nd))+crit*l_gtr(nd)
  -> fix for pv28-302gold and pv28-301gold
 back-up to back/pv28-302gold with new ddecb and ddecdm
 back/pv28-301gold with old ddecb and ddecdm
3/01 2008
 >4 cpu works, too.
2/29 2008
 every NDSTEPDDEC=5 (define.f) step do the domain decomposition.
2/28 2008
 getting the consistent results with previous version
2/21 2008
 deleting myrank,n?-1,nprocs routines
  set_value.f calc_dv_du.f dmtreef.f treef.f star.f updateu.f
 * SI_efdg and etc. keep or not?
2/25 2008
 maincheck.f
  to check the overlap between particles, reading test output main2*
2/19-28 2008
 ver.28 update log.
 -radrates.f
      IF(z .GT. SI_zri1.or.SI_flagrad.ge.-1) THEN
  just in case...
 - star.f
  use a?_p,cx_tr,cm?_tr for the feedback...
 - main.f p and cs update after first set_value.f
 - *treef.f
 - calc_dv_du.f
 - set_value.f
  flag=3: 
 - keeping neighbour list is tough, maybe only local one?
 - mv analysis.f -> output.f
  flagascii=0 ascii output
 - copy original analysis.f analysis.v27.f
 - running without communication...
 - stime.f ltime.f
 - deleting myrank,n?-1,nprocs routines
  set_value.f calc_dv_du.f dmtreef.f treef.f star.f updateu.f
 - set_ini.f (no check for Ini_flagsemic.eq.0 case...)
 new program
 - ddec.f,ddecdm.f ... Peano-Hilbert curve 
  next level id)
  (original id)*8+i using tree decomposition.
  - tree.f,dmtree.f,ldmtree.f ... *makeroot()
 - common.f global.f
  ierr in common
      common /PDI/id_p(0:MN-1)
      common /PDI/id_dm(0:MN-1)
  delete OF_scount, OF_count
  no pu_p()
 - flagcont:
  1: from continue, try to make the same format as output.

*** ver. 28
 parallel with domatin decomposition

*** ver. pv27.3

02/01 2008
metch.f
        if(logTp.gt.ltmin_mch) then
          ram(pn) = ram(pn)+radp/rho_p(pn)
        endif

02/01 2008
gcd+ bug report from noguchi-san:
 metch.f is extrapolating the metal cooling to lower temperature.
 check on /home/dkawata/inv/fsim/coolr/mcool
 if there is no heating, it's not too high, compared to
  forbidden line contribution.
 but in the case of including uvb, at z~3.2, extrapolation
  is getting too high cooling (but not too bad total 1e-23 or so).

03/30 2007  -> pv27.3
set_ini.f
 bug in setting fHM and fH2I.
        fHM = (1.0e-9)*(xe(4)**0.88d0)*fHII
->
        fHM = (2.0e-9)*(xe(4)**0.88d0)*fHII

        fH2I = hnf*(2.0e-20)*(1.0d0-Crec(6))*((1.0d0+Ini_zi)**5.1d0)
     &  *(SI_omg0**1.5d0)/(SI_h0*Ini_OMGg)
->
        fH2I = hnf*(2.0e-20)*(1.0d0-Crec(6))*((1.0d0+300.0d0)**5.1d0)
     &  *(SI_omg0**1.5d0)/(SI_h0*Ini_OMGg)



8/3 2007
 analysis.f
  change the output format to old format.
 -> need to change MN, MNDM for each simulation.

# ver 27.1

5/11 2007
set_ini_nocosm.f
        write(60,'(a8,1pE13.5)') 'Ini_hyd=',Ini_hyd
->
        write(60,'(a8,I8)') 'Ini_hyd=',Ini_hyd


ini/mch.dat /home/office/dkawata/cluster/inv/fsim/coolr/mcool/mcz
 -> mcool.dat
 set zri1, zri2, alpha
ini/uvb.dat /nfs/cluster/cosmic/dkawata/inv/cuba/trans

#### change log

12/20 2006
 cont.f forcont.f
  change the format of pcont.dat 
 analysis.f
  output TM_tot in the first line of ?000(step)

11/15 2006
 ver. 27 with galaxy evolution model 
  (the version with fixed z and non-cosmological expansion)
 *** make galev use set_ini_nocosm.f ***
 SI_flagcosm 0: no cosmo, otherwise: cosmo
 global.f common.f cont.f forcont.f
 * for non-cosmological version
  main.f,stime.f

  * cont.step.f is still only for cosmological simulations

06/19 2006
 ver. 26 with semi-cosm
  add pv25, i.e. stars formed from gas with higher density than "DTHBH"
 -> bh -> feedback.

NOTE: set_value.f  has to be flag=3 at star.f to keep mass conservation

bhfunc.f
 bhfeed()
  set e_sn macc_sn  
star.f (copy from pv25)
 fHM_p <- density
 fHeI_p <- pressure when star has born.
 reduce the star formation efficiency for pop 3 stars CSEFFP3
 feedback()
  av() ... mass increment
  dti() ... mass decrement
   inhibit more than fmbhalim=90% mass accreats to BH.
    -> count as SI_mbhaloss
 change softening after feedback
set_value.f flag=3
 using only gtree
 put 
  calculate rho_p,u_p->div_v,vij->arot 
analysis.f 
 change the format of system.dat and b*
main.f,set_ini.f,analysis.f,forcont,cont
 add "nbh" etc.
common.f global.f
 pop3 yields  *_ytb(NYTZ+2), therefore set  *_ytb(0:NYTZ+2)
 SI_TBH ... black hole formation time = lifetime of ml for pop3 stars
  read from tzypop3.dat
 list_bh ... bh particle list
 SI_flagbh... <=0: with POP3 BH, 1: highdense gas->BH, otherwise no
define.f
 DTHBH
 ZPOP3 = 1.0e-6 x 0.019
 CVEL,CBHFD

setyeilds.f (copy from pv25)
 set pop3 yields  to *_ytb(NYTZ+2)
dtyields.f
 zg<ZPOP3 set iz1 = NYTZ+1 wz1 = 0.0, wz2=1.0 



04/18
 vectorise
  ldmtreef.f (forgot !ocl novrec (mxx_ldmtr,myy_ldmtr,mzz_ldmtr))
 vectorise *tree.f ... the same level as gtree.f

  dmtree.f,tree.f    l.70-149
 * nalist,node,talist is used. assuming number of sc with np>=1
  must be smaller than MN.

04/11 2006
 put different version of gtree on vecapr06
 gtree.f
  gmakeroot
 pn -> list_ap  for vector

04/09 2006
 parallelise ltime.f

03/28 2006
 if Ini_hyd = 1
  omgb = Ini_OMGg
 else
  omgb = Ini_OMGg/(h*h)

02/27 2006
cont.step.f
 to start from the output/data
main.f 
 output "SI_flagrad" at each timestep

12/11 2005
metch.f
 just in case z_jtb(iz) > SI_zri1 (-> too low heating rate...)
 add

 70     if(z_jtb(iz).ge.SI_zri1) then
          iz = iz-1
        endif


ver 23.1
25/01/2005
 add radiative_rates in calc_dv_du.f
 * might not include UVB heating, when restarted

13/12/2004
 NO KINETIC FEEDBACK IS ALLOWED
 introduce momentum feedback
 star.f


02/12/2004
 stime.f
  afromt(TM_tot+dtmax,zn) -> afromt(TM_tot+0.01d0*dtmin)
  require dt < dtcool or dtsp
   10 times after zrei
 flageor -> dtmaxeor

24/11/2004
 metch.f
  low density limit set to be lnemin_mch, use cooling and heating
   at lnemin_mch

23/11/2004
 star.f
 new star formation criteria
  no density thresholds
  add tcool<tdyn

### ver. 23

18/11/2004
 subdtusp.f
  if dt < 0.125 dt, then dt = 0.0625 dt

07/11/2004
* Galli & Palla H2 cooling
 copy Lepp & Shull version to hhecool.ls.f hcini.ls.f parameterc.ls.f
 define.f
  add TLH2C=10.0d0 TUH2C=1.0e5  H2 cooling range (K)  

01/11/2004
 CCOOLSP = 0.1 recommended (from LCDM L=200/h Mpc test, with Hui & Gnedine 1997)

25/10/2004
* esolve.ei.f
 expricit integration version  

24/10/2004
* radrates.f
 radiation in  Hui & Gneding (1997)

20/10/2004
* during the re-ionisation use the time step required by cooling and chemical
  evolution

 SI_flagrad 1: without UVB
            0: before SI_zri1, -1: first step after zri1 
           -2:between zri1 and zri2,  -3: after zri2

* defeine.f
  CCOOLSP ... courant number for species and energy update  

* stime.f
 stop large time step at SI_zri, set lt from 

* cont.f forcont.f
 add SI_flagrad

* radrates.f metch.f
   

16/10/2004
##### pver22titeu #####
* subdtusp.f with individual timestep

 spsolve.f, esolve.f

04/10/2004
 set_ini.f radrates.f
 add SI_flagrad : flag for UVB


15/09/2004
* define.f
    DU_UPU=0.025d0
* radrates.f set_ini.f cont.f common.f global.f setmchr.f
  introduce SI_zri1,SI_zri2,SI_auvb
  UVB is gradually increase following
   ((1/(1-zri2/zri1))*(1-z/zri1))**2 between zri1>zri2
 read these values in setmch.f
   

15/09/2004
 set epsilon = 0.01 in subdtusp.f
* cont.f
 add SI_zri

09/09/2004
 add metal cooling calculated in inv/fsim/coolr/mcool
* make setmchr.f

* common.f, global.f
 cr_mtb(i,j,k),hr_mtb(i,j,k)  i=0:NTMCH-1, j=0,NDMCH-1, k=0:NZUVB-1
   * Nz has to be the same as UVB's
 ltmin_mch,dlt_mch,lnemin_mch,dlne_mch,lru_mch
 SI_zri
#* define.f
 NTMCH = 188, NDMCH = 20
#  , TMINMCH = 4.3,  DTMCH = 0.025
  ,  DMINMCH = -12.0,DDMCH = 0.05
  UMCH = 1.0e-23

* cool.f add 'call mch()'

* mch.f


06/09/2004
* delete setcoolr
* hcini.f parameter.f
  delete J_21,alphaJ,J0_nu
* create setuvb.f call from hcini.f

* radrates.f
 set J_nu() from jz_jtb 
 calculate U_1000A
 
* common.f and global.f
  jz21_jtb(i,j)  nu(i) from hcini
  z_jtb(j)
   i = 1:N_nu, j = 0:NZUVB-1, 
  inu1000A_jtb,w1000A_jtb for U_1000A in radrates.f
* define.f 
 delete *_CT NCT*
 add NZUVB=50

*** pver22t ***  = pver20t + H2 cooling + CUBA UVB

27/08/2004
 set_ini.f
  add if(myrank.eq.0) 
 before write(6,*) ' Error ...

24/04/2004
 set_ini.f
  read both DM and baryon initial condition.

09/04/2004
 atfunc.f
 if(myrank.eq.0) then
  it = NATTABLE
 endif
->
 it = NATTABLE

03/12/2003
*** pver21t ***  = pver20t + H2 cooling
 edit
  updateu.f cool.f main.f calc_dv_du
 add
  subdtusp.f esolve.f spsolve.f radrates.f hcini.f
 global.f common.f
  fHI_p, fHII_p, fHM_p, fHeI_p fHeII_p, fHeIII_p, fH2I_p
 global.f
  include parameterc.f

24/06/2003
 in lctime.f
   l.263
    do i=0,nanp
 ->
    do i=0,nanp-1
06/11/2002
 in dmtreef.f treef.f  insert
 999  if(ndm.gt.0.and.ndm.ne.SI_ndm1) then
 before ldmtr roop, for no multi level simulation
  -> made bug 03/12/2002
 ndm is not passed to dmtreef.f
so, change calc_dv_du.f dmtreef.f 
      subroutine dmtreeforce(nadm,np)
  ->
      subroutine dmtreeforce(ndm,nadm,np)



27/10/2002
 less output than what input.dat set, because of error in cont.f
 cont.f
      if(step.eq.0.or.SI_flagout.ne.0) then
->
      if(TM_kn.eq.TM_k.and.SI_flagout.ne.0) then

14/09/2002
 bug in treef.f is fixed           vvv
              ire2=1.0d0/(r2+(0.25d0**((eps_p(pn)+eps_dm(pnj))**2)))
 ->
              ire2=1.0d0/(r2+(0.25d0*((eps_p(pn)+eps_dm(pnj))**2)))


27/09/2002
 cont.f
  adjust for the case when SI_flagout = 0
26/09/2002
 ldmtree.f
   MAXNODEDM -> MAXNODEDM
 treef.f
   MAXNODE -> MAXNODEDM or MAXNODEDM
 dmtreef.f
   MAXNODEDM -> MAXNODE or MAXNODELDM

10/09/2002
 set_ini.f
  error in setting mdm
          mdm = (SI_omg0-Ini_OMGg)*rhob0*(dxi(il)**3)
->
        if(il.eq.Ini_mul) then
          mdm = (SI_omg0-Ini_OMGg)*rhob0*(dxi(il)**3)
        else
          mdm = SI_omg0*rhob0*(dxi(il)**3)
        endif


26/08/2002
 star.f 
  fixed error before Allgatherv for Si 

23/08/2002
set_ini.f
 initial hm = 1.5 x length from mean dx

c tryed to make these version, but it is expensive, and doen't work well,
c  I don't still know why.
c pver20tsnbltvm
c vmax from n step
c set_value.f
c  calc vmax only in flag 2
c  call gtreebuild if h changes
c make new subroutine set_vmax.f
c change f call set_vmax in main.f
c
c pver20tsnblt 02/07/2002
c 04/07/2002
c time limit by maximum relative velocity between neighbours
c   add vmax_p to common.f global.f
c  set_value.f
c  stime.f
c  ltime.f
c  define.f  CHCRIT
c  cont.f forcont.f

pver20t 02/07/2002
 03/07/2002
 * ocsillation 
  only Nnb < Nmin
 *  smooth numnb
  define.f(NNBSMAX,NNBSMIN,V34) global.f update.f analysis.asc.f set_value.f
  numnb<0 -> 0.1

 update the algorithm for update of h
  global.f, common.f
    add div_vi_p
  set_value.f
    only available 2 or 3
    add count div_vi_p
   set_value.noi.f
     no iteration version + div_vi_p calculation (but div_vi is not true)
  update.f
    change updatesl 
      Thacker et al.(00)  (better including div_v 02/07/2002)

******* pver20t

pver19t 24/07/2002
 vectorization of feedback routine
  subroutines tree.f dmtree.f gtree.f global.f common.f set_value.f star.f,
    main.f set_ini.f calc_dv_du

 global.f common.f
  add hm_gtr

 gtree.f
   gtreebuild(ng) -> gtreebuild(nig,ng), thus also in main.f, star.f
   to calculate hm_gtr, use delta_tr as hm_sc

 set_value.f  calc_dv_du
  crit2=dsqrt(2.0d0)*0.5d0
  if(flag.eq.3) rh=h_p(pni)+crit2*l_gtr(nd)
  else
   rh=2.0d0*h_p(pni)+crit*l_gtr(nd)
   -> rh=0.5d0*(h_p(pni)+hm_gtr(nd))+crit*l_gtr(nd)


 star.f 
  significant change feedback() 
   stars walk thorough the tree -> gas walk through the tree
  important
   rh=hm_gtr(nd)+crit*l_gtr(nd)
   hij = h_p(pn)
   improve energy feedback, total -> per mass
   
 analysis
  check total ejected metals SI_snzs 

 minor changes
  tree.f gtree.f dmtree.f ldmtree.f
   dsqrt(tl*tl) -> if(tl.lt.0.0d0) tl=-tl
  analysis.f
   change output format 
     baryon b000*
     DM     d000*
 
 BUG since pver18t
      hm=SI_a*(dxi(Ini_mul)**3)*(3.0d0*dble(NNBS)
     &  /(4.0d0*M_PI))**THIRD
-> 
      hm=SI_a*dxi(Ini_mul)*((3.0d0*dble(NNBS)
     &  /(4.0d0*M_PI))**THIRD)
 

pver18t
19/07/2002
 multiresolution mode is supported
10/07/2002
 keep and output the data of pressures (u_p) and densities (div_v_p)
 when stars formed 
 increase variables in output/data/p* by 2 (+div_v_p,h_p)
  change star.f and analysis.f
  
09/07/2002
 change star.f 
  in feedback use W(rij,hi), instead of W(rij,hij)
 set_value.f
  if flag = 3, calc density and neighbour search using hi, not hij

 rh = 2.0d0*h_p(pni)+crit*l_gtr(nd) -> h_p(pni)+crit*l_gtr(nd)
 hij = (h_p(pni)+h_p(pn))*0.5d0 -> h_p(pni)

?/02/2002
 separate tree of high resolution DM particles from that for low resolution
 ones  

pver17t
03/04/2002
 parallelise updateu.f

